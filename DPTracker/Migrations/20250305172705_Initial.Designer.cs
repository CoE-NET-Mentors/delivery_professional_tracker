// <auto-generated />
using System;
using DPTracker.Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DPTracker.Migrations
{
    [DbContext(typeof(DPTrackerDbContext))]
    [Migration("20250305172705_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DPTracker.Models.Data.DeliveryProfessional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryProfessionals");
                });

            modelBuilder.Entity("DPTracker.Models.Data.DeliveryProfessionalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAssigned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeliveryProfessionalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecordType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryProfessionalId");

                    b.ToTable("DeliveryProfessionalRecords");
                });

            modelBuilder.Entity("DPTracker.Models.Data.Mentee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeliveryProfessionalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id", "MentorId");

                    b.HasIndex("DeliveryProfessionalId");

                    b.HasIndex("MentorId");

                    b.ToTable("Mentees");
                });

            modelBuilder.Entity("DPTracker.Models.Data.Mentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeliveryProfessionalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryProfessionalId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("DPTracker.Models.Data.RecordNote", b =>
                {
                    b.Property<Guid>("DeliveryProfessionalRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("DeliveryProfessionalRecordId", "CreatedAt");

                    b.ToTable("RecordNotes");
                });

            modelBuilder.Entity("DPTracker.Models.Data.DeliveryProfessionalRecord", b =>
                {
                    b.HasOne("DPTracker.Models.Data.DeliveryProfessional", "DeliveryProfessional")
                        .WithMany()
                        .HasForeignKey("DeliveryProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryProfessional");
                });

            modelBuilder.Entity("DPTracker.Models.Data.Mentee", b =>
                {
                    b.HasOne("DPTracker.Models.Data.DeliveryProfessional", "DeliveryProfessional")
                        .WithMany()
                        .HasForeignKey("DeliveryProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DPTracker.Models.Data.Mentor", "Mentor")
                        .WithMany("Mentees")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DeliveryProfessional");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("DPTracker.Models.Data.Mentor", b =>
                {
                    b.HasOne("DPTracker.Models.Data.DeliveryProfessional", "DeliveryProfessional")
                        .WithMany()
                        .HasForeignKey("DeliveryProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryProfessional");
                });

            modelBuilder.Entity("DPTracker.Models.Data.RecordNote", b =>
                {
                    b.HasOne("DPTracker.Models.Data.DeliveryProfessionalRecord", "DeliveryProfessionalRecord")
                        .WithMany("RecordNotes")
                        .HasForeignKey("DeliveryProfessionalRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryProfessionalRecord");
                });

            modelBuilder.Entity("DPTracker.Models.Data.DeliveryProfessionalRecord", b =>
                {
                    b.Navigation("RecordNotes");
                });

            modelBuilder.Entity("DPTracker.Models.Data.Mentor", b =>
                {
                    b.Navigation("Mentees");
                });
#pragma warning restore 612, 618
        }
    }
}
